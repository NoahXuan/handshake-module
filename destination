module destination(
	input rst_n,
	input en,
    input clk,
    input valid,
    input [7:0] data,
    output ready,
	output [7:0]data_out
    );

reg [7:0]data_in;
reg ready_buf;
assign ready=ready_buf;
assign data_out=data_in;

always@(posedge clk or negedge rst_n)
begin
	if(!rst_n)
	begin
		data_in<=8'h00;
		ready_buf<=0;
	end
	else
	begin
		if(en)
		begin
			ready_buf<=1;
			if(ready_buf)
			begin
				if(valid)
					data_in<=data;
				else
					data_in<=8'h00;
			end
			else
			begin
				data_in<=8'h00;
			end
		end
		else
			ready_buf<=0;
	end
end

endmodule
